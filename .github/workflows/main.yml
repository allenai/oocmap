name: Main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'

env:
  PYTHON_PATH: ./
  DEFAULT_PYTHON: 3.9

jobs:
  checks:
    name: ${{ matrix.os }} - python ${{ matrix.python }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04, macos-latest, ubuntu-latest]
        python: ['3.9', '3.10']

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install prerequisites
        run: |
          pip install --upgrade pip setuptools wheel virtualenv
          pip install -r dev-requirements.txt

      - name: Show environment info
        run: |
          which python
          python --version
          pip freeze

      - name: Build
        run: |
          python setup.py check
          python setup.py bdist_wheel

      - name: Install editable
        run: |
          pip install -e .

      - name: Test
        run: |
          pytest -v --color=yes .

      - name: Upload package distribution files
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [checks]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v1  # needs v1 for now

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Install requirements
        run: |
          pip install -r dev-requirements.txt

      - name: Prepare environment
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Download package distribution files
        uses: actions/download-artifact@v3
        with:
          name: package
          path: dist

      - name: Generate release notes
        run: |
          python scripts/release_notes.py > ${{ github.workspace }}-RELEASE_NOTES.md

      - name: Publish package to PyPI
        run: |
          twine upload -u allennlp -p ${{ secrets.PYPI_PASSWORD }} dist/*

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body_path: ${{ github.workspace }}-RELEASE_NOTES.md
          prerelease: ${{ contains(env.TAG, 'rc') }}
          files: |
            dist/*
